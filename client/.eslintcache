[{"/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/index.js":"1","/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/App.js":"2","/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Header.js":"3","/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Fetch.js":"4","/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Search.js":"5","/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Pagination.js":"6","/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Videos.js":"7"},{"size":179,"mtime":1607060388735,"results":"8","hashOfConfig":"9"},{"size":187,"mtime":1607060388732,"results":"10","hashOfConfig":"9"},{"size":295,"mtime":1607060388733,"results":"11","hashOfConfig":"9"},{"size":2846,"mtime":1607060404972,"results":"12","hashOfConfig":"9"},{"size":912,"mtime":1607060388734,"results":"13","hashOfConfig":"9"},{"size":637,"mtime":1607060388733,"results":"14","hashOfConfig":"9"},{"size":1849,"mtime":1607060388734,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z8bqpd",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},"/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/index.js",[],"/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/App.js",[],["32","33"],"/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Header.js",[],"/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Fetch.js",["34","35"],"/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Search.js",[],"/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Pagination.js",[],"/Users/rongbang/Desktop/Lai/Technical_Assignment/React_Search_YT_API/client/src/components/Videos.js",["36"],"import React, { useState } from 'react';\nimport '../styles/videosList.css';\nimport '../../node_modules/react-modal-video/scss/modal-video.scss';\nimport ModalVideo from 'react-modal-video';\n\nexport default function Videos({ videos, loading, searchTerm }) {\n  const [isOpen, setOpen] = useState(false);\n  const [currentVideoId, setCurrentVideoId] = useState('');\n\n  // Loading the page\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n  // sometime Youtube API send back an empty array, ask the user to refresh the page\n  if (videos.length <= 0) {\n    return <h2>Plesse reload the page...</h2>;\n  }\n\n  return (\n    <div className='videos'>\n      {videos\n        .filter((video) => {\n          // use Regular Express for case insenstive\n          const regExp = new RegExp(searchTerm, 'gi');\n          if (video.snippet.title.match(regExp)) {\n            return video;\n          }\n        })\n        .map((video) => (\n          <div>\n            <div\n              className='showVideo'\n              onClick={() => {\n                setOpen(true);\n                setCurrentVideoId(video.snippet.resourceId.videoId);\n              }}\n            >\n              <div className='video_card'>\n                <div className='video_thumbnail'>\n                  <img\n                    src={`${video.snippet.thumbnails.medium.url}`}\n                    alt='thumbnails'\n                  />\n                </div>\n                <div className='card_body'>\n                  <h4 className='card_title'>{video.snippet.title}</h4>\n                </div>\n              </div>\n            </div>\n\n            <ModalVideo\n              channel='youtube'\n              autoplay\n              isOpen={isOpen}\n              videoId={currentVideoId}\n              onClose={() => setOpen(false)}\n            />\n          </div>\n        ))}\n    </div>\n  );\n}\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":21,"column":22,"nodeType":"43","messageId":"44","endLine":21,"endColumn":35},{"ruleId":"45","severity":1,"message":"46","line":37,"column":6,"nodeType":"47","endLine":37,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":22,"column":25,"nodeType":"51","messageId":"52","endLine":22,"endColumn":27},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'setMaxResults' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'maxResults'. Either include it or remove the dependency array.","ArrayExpression",["55"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [maxResults]",{"range":"58","text":"59"},[1320,1322],"[maxResults]"]